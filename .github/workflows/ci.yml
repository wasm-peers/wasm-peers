name: CI

on:
  push:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install wasm-pack
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo xtask test

  formating:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo xtask fmt

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo xtask clippy

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo xtask doc

  # # It fails on breaking changes, as wasm-peers and wasm-peers-signaling-server depend on crates.io version of wasm-peers-protocol.
  # publish-dry-run:
  #   name: Publish dry run
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #     - uses: Swatinem/rust-cache@v2
  #     - name: Publish dry-run of wasm-peers crate
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: publish
  #         args: -p wasm-peers --dry-run
  #     - name: Publish dry-run of wasm-peers-protocol crate
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: publish
  #         args: -p wasm-peers-protocol --dry-run
  #     - name: Publish dry-run of wasm-peers-signaling-server crate
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: publish
  #         args: -p wasm-peers-signaling-server --dry-run

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache deps
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
      - name: Run cargo-tarpaulin
        run: cargo tarpaulin --all-features --workspace --ignore-tests --out Lcov
      - name: Upload to Coveralls
        # upload only if push
        if: ${{ github.event_name == 'push' }}
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./lcov.info"
